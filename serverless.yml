org: testdevelopment
app: demo-cards-api
service: cards-api-demo
frameworkVersion: '3'

plugins:
  - serverless-ssm-fetch

provider:
  name: aws
  runtime: nodejs14.x
  apiGateway:
    apiKeySourceType: HEADER
    apiKeys:
      - value: ${ssm:api_key}
        description: Testing api key
        customerId: 221
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
      Resource:
        - arn:aws:dynamodb:us-east-1:485585223748:table/demo.cards.api
    - Effect: Allow
      Action:
        - ssm:GetResourcePolicy
        - ssm:GetSecretValue
        - ssm:DescribeSecret
        - ssm:ListSecretVersionIds
        - ssm:GetParameters
        - ssm:GetParameter
        - ssm:GetParametersByPath
      Resource:
        - arn:aws:ssm:us-east-1:485585223748:parameter/marvin_id
        - arn:aws:ssm:us-east-1:485585223748:parameter/marvin_key
        - arn:aws:ssm:us-east-1:485585223748:parameter/card_match_api_key
    - Effect: Allow
      Action:
        - ssm:ListSecrets
      Resource: "*"

functions:
  setCardData:
    handler: src/handlers/setCardData/setCardData.handler
    ssmToEnvironment:
      - CARDMATCH_API_KEY
    events:
      - http:
          path: /widget
          method: post
          private: true
      - cloudwatchLog:
          logGroup: '/aws/lambda/setCardData'
  fetchCardData:
    handler: src/handlers/fetchCardData/fetchCardData.handler
    ssmToEnvironment:
      - null # we pass null in here to keep the ssm values from being set to the function env.
             #The way the param plugin works is it passes all values to the function by default unless this array is defined.
    events:
      - http:
          path: /results
          method: post
          private: true
      - cloudwatchLog:
          logGroup: '/aws/lambda/fetchCardData'

resources:
  Resources:
    CardDataTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: demo.cards.api
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
        KeySchema:
          - AttributeName: user_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TimeToLiveSpecification:
          AttributeName: expireIn
          Enabled: true


custom:
  serverlessSsmFetch:
    # The two marvin vars are not encrypted on creation (most likely would never happen)
    MARVIN_ID: /marvin_id
    MARVIN_KEY: /marvin_key
    # The cardmatch api key is encrypted, since we're not using KMS in the function, we decrypt it at runtime using ~true so we can use it in the function
    CARDMATCH_API_KEY: /card_match_api_key~true
